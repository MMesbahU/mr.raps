mr.raps.shrinkage(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param, diagnosis = TRUE)
out <- mr.raps.shrinkage(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param, diagnosis = TRUE)
lm(out$t ~ out$gamma.hat.z)
lm(out$t ~ out$gamma.hat.z - 1)
summary(lm(out$t ~ out$gamma.hat.z - 1))
which(out$gamma.hat.z > 100 & out$t > 2)
data[which(out$gamma.hat.z > 100 & out$t > 2), ]
tmp <- data[- which(out$gamma.hat.z > 100 & out$t > 2), ]
mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param, diagnosis = TRUE)
mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param)
data[which(out$gamma.hat.z > 100 & out$t < 2), ]
summary(lm(out$t ~ out$gamma.hat.z - 1))
summary(lm(out$t ~ poly(out$gamma.hat.z, 3) - 1))
library(splines);summary(lm(out$t ~ bs(out$gamma.hat.z, 3) - 1))
library(splines);summary(lm(out$t ~ bs(out$gamma.hat.z, 5) - 1))
summary(lm(out$t ~ bs(rank(out$gamma.hat.z), 5) - 1))
summary(lm(out$t ~ poly(out$gamma.hat.z, 2) - 1))
print
load_all()
library(devtools); load_all()
mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber")
mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber", shrinkage = TRUE)
mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param)
lm
print
out <- mr.raps.shrinkage(tmp$beta.exposure, tmp$beta.outcome, tmp$se.exposure, tmp$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param)
print(Out)
print(out)
out
document()
load_all()
print
document()
load_all()
print.mr.raps
out
print.lm
plot.lm
document()
document()
load_all()
print.mr.raps
plot.mr.raps
install()
document()
install()
out
names(out)
library(ggplot2)
install.packages("ggplot2")
57
library(ggplot2)
out <- mr.raps.shrinkage(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", shrinkage = TRUE, prior.param = prior.param)
load_all()
plot(out)
load_all()
plot(out)
document()
load_all()
mr.raps.recommend(data)
load_all()
mr.raps.recommend(data)
load_all()
mr.raps.recommend(data)
load_all()
mr.raps.recommend(data)
load_all()
mr.raps.recommend(data)
document()
rep(c(1,2), 2)
summary(out2$gamma.hat.z)
summary(out1$gamma.hat.z)
data <- subset(lipid.cad, lipid == "hdl" & restrict & gwas.selection == "teslovich_2010" & gwas.outcome == "cardiogramplusc4d")
z <- data$beta.exposure / data$se.exposure
prior.param <- fit.mixture.model(z)
prior.param
max(abs(data$beta.exposure / data$se.exposure))
load_all()
out1 <- mr.raps.shrinkage(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", shrinkage = FALSE)
summary(out1$gamma.hat.z)
dim(data)
b_exp <- data$beta.exposure
b_out <- data$beta.outcome
se_exp <- data$se.exposure
se_out <- data$se.outcome
shrinkage <- FALSE
beta <- out1$beta.hat
tau2 <- out1$tau2.hat
summary(gamma.hat.z)
plot(b_exp, gamma.hat)
abline(0, 1)
tau2
load_all()
out1$beta.hat
out2$beta.hat
out2$beta.se
library(devtools)
install()
library(mr.raps)
data(lipid.cad)
data <- subset(lipid.cad, lipid == "hdl" & restrict & gwas.selection == "teslovich_2010" & gwas.outcome == "cardiogramplusc4d")
library(ggplot2)
out1
out2
prior.param
posterior.mean(5, 1, prior.param$p, prior.param$mu, prior.param$sigma)
posterior.mean(10, 1, prior.param$p, prior.param$mu, prior.param$sigma)
shrinkage
b_exp <- data$beta.exposure
b_out <- data$beta.outcome
se_exp <- data$se.exposure
se_out <- data$se.outcome
shrinkage <- FALSE
beta <- -0.185864
tau2.hat <- 3.22966e-5
tau2 <- 3.22966e-5
gamma.hat[1:10]
shrinkage <- TRUE
gamma.hat[1:10]
which(b_exp / se_exp > 10)
gamma.hat[227]
shrinkage <- FALSE
gamma.hat[227]
summary(gamma.hat.z)
shrinkage <- TRUE
gamma.hat[227]
summary(gamma.hat.z)
beta <- out2$beta.hat
tau2 <- out2$tau2.hat
gamma.hat[227]
v[227]
v[227]
summary(gamma.hat.z)
summary(gamma.hat.z)
out2$gamma.hat.z[227]
gamma.hat.z[227]
head(df)
beta
beta <- -0.18
plot(gamma.hat.z, t)
t.test(out1$t)
t.test(out2$t)
    lm.test <- lm(t ~ poly(sqrt(gamma.hat.z), 4), out1)
    lm.test <- lm(out1$t ~ poly(sqrt(out1$gamma.hat.z), 4))
summary(lm.test)
    lm.test <- lm(out2$t ~ poly(sqrt(out2$gamma.hat.z), 4))
summary(lm.test)
names(lm.test)
names(summary(lm.test))
anova(lm.test)
names(anova(lm.test))
anova(lm.test)[5]
plot(bs(out2$gamma.hat.z, 4)[, 1])
library(splines); plot(bs(out2$gamma.hat.z, 4)[, 1])
library(splines); plot(out2$gamma.hat.z, bs(out2$gamma.hat.z, 4)[, 1])
library(splines); plot(out2$gamma.hat.z, bs(out2$gamma.hat.z, 4)[, 2])
library(splines); plot(out2$gamma.hat.z, bs(out2$gamma.hat.z, 4)[, 3])
library(splines); plot(out2$gamma.hat.z, bs(out2$gamma.hat.z, 4)[, 4])
out <- out2
summary(lm.test)
anova(lm.test)
anova(lm.test)
summary(lm.test)
mr.raps.publish(data)
beta
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point()
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess")
beta <- -0.18
beta <- -0.2
tau2
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess")
mean(t)
beta <- -0.18
mean(t)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess")
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/3)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/4)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/5)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/7)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/2)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess")
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/3)
ggplot() + aes(x = gamma.hat.z, y = t) + geom_point() + geom_smooth(method = "loess", span = 1/2)
install()
load_all()
install(mr.raps)
devtools::install(mr.raps)
devtools::install()
devtools::install()
devtools::document()
install()
devtools::install()
devtools::install()
ldl1
hdl1
tg1
ldl2
hdl2
tg2
hdl2
install.packages("gridExtra")
57
getwd()
qq.plot
qq.plot
ggplot
qqnorm
stats:::qqnorm
qq.plot
rank(df$t)[1:10]
df$t[1:10]
rank(abs(df$t))[1:10]
qq.plot
install()
devtools::install()
mr.raps:::mr.raps.publish
setwd("../../../IV_Bayes/code")
install()
devtools::install()
devtools::install()
install()
devtools::install()
devtools::install()
ppoints(10)
qq.plot
ppoints(20)
1/20
qq.plot
qq.plot
?ppoints
install()
devtools::install()
ldl1
ldl1
ldl1
setwd("../../../IV_Bayes/code")
devtools::install()
devtools::install()
devtools::document()
document()
library(devtools)
document()
document()
document()
hist((0.5 + rnorm(10000))/(0.5 + rnorm(10000)))
hist((0.5 + rnorm(10000))/(0.5 + rnorm(10000)))
hist((0.5 + rnorm(10000))/(2 + rnorm(10000)))
hist((0.5 + rnorm(10000))/(2 + rnorm(10000)))
hist((0.5 + rnorm(10000))/(2 + rnorm(10000)), breaks = seq(-10, 10))
r <- (0.5 + rnorm(10000))/(2 + rnorm(10000)
hi
r <- (0.5 + rnorm(10000))/(2 + rnorm(10000))
hist(r[abs(r) < 10])
hist(r[abs(r) < 10])
hist(r[abs(r) < 10], 50)
hist(r[abs(r) < 10], 100)
r <- (0.5 + rnorm(10000))/(1 + rnorm(10000))
hist(r[abs(r) < 10], 100)
r <- (2 + rnorm(10000))/(1 + rnorm(10000))
hist(r[abs(r) < 10], 100)
p <- 100000
r <- (2 + rnorm(p))/(1 + rnorm(p))
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 10], 100)
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100)
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2)
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed")
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red")
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3)
pdf("ratio_hist.pdf"); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
getwd()
pdf("ratio_hist.pdf", width = 8, height = 5); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
pdf("../../slides_new/ratio_hist.pdf", width = 10, height = 5); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
pdf("../../slides_new/ratio_hist.pdf", width = 6, height = 3); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
pdf("../../slides_new/ratio_hist.pdf", width = 6, height = 4); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
pdf("../../slides_new/ratio_hist.pdf", width = 7, height = 4); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
pdf("../../slides_new/ratio_hist.pdf", width = 7, height = 5); p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3); dev.off()
median(r)
mean(r)
p <- 100000; r <- (2 + rnorm(p))/(1 + rnorm(p)); 
hist(r[abs(r) < 15], 100); abline(v = 2, lty = "dashed", col = "red", lwd = 3);
median(r)
library(mr.raps)
t <- seq(-5, 5, 0.1); posterior.mean(z, 1, 0.9, c(0, 0), c(0.5, 3))
t <- seq(-5, 5, 0.1); f <- posterior.mean(t, 1, 0.9, c(0, 0), c(0.5, 3))
plot(t, f)
plot(t, f); abline(0, 1)
plot(t, f, type = "l"); abline(0, 1)
plot(t, f, type = "l"); abline(0, 1, lty = "dashed")
plot(t, f, type = "l", main = "Spike-and-slab shrinkage"); abline(0, 1, lty = "dashed")
psi <- psi.huber(t)
psi <- mr.raps:::psi.huber(t)
psi <- mr.raps:::rho.huber(t, deriv = 1)
plot(t, psi)
plot(t, psi, type = "l", main = "Huber's score function")
par(mfrow = c(1, 2)); plot(t, f, type = "l", main = "Spike-and-slab shrinkage"); abline(0, 1, lty = "dashed"); plot(t, psi, type = "l", main = "Huber's score function")
pdf("../../slides_new/fpsi.pdf");
par(mfrow = c(1, 2)); plot(t, f, type = "l", main = "Spike-and-slab shrinkage"); abline(0, 1, lty = "dashed"); plot(t, psi, type = "l", main = "Huber's score function")
dev.off()
pdf("../../slides_new/fpsi.pdf", width = 6, height = 4);
par(mfrow = c(1, 2)); plot(t, f, type = "l", main = "Spike-and-slab shrinkage"); abline(0, 1, lty = "dashed"); plot(t, psi, type = "l", main = "Huber's score function")
dev.off()
pdf("../../slides_new/fpsi.pdf", width = 8, height = 4);
par(mfrow = c(1, 2)); plot(t, f, type = "l", main = "Spike-and-slab shrinkage"); abline(0, 1, lty = "dashed"); plot(t, psi, type = "l", main = "Huber's score function")
dev.off()
library(devtools)
build()
install()
example(mr.raps)
library(mr.raps)
example(mr.raps)
document()
install()
example(mr.raps)
library(mr.raps)
example(mr.raps)
example(mr.raps.shrinkage)
library(mr.raps)
example(mr.raps.mle)
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome)
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, se.method = "bootstrap")
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", se.method = "bootstrap")
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", se.method = "bootstrap")
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE, se.method = "bootstrap")
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE, se.method = "bootstrap")
library(devtools)
document()
install()
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE, se.method = "bootstrap")
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE)
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE)
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "tukey", shrinkage = FALSE)
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE)
b_exp <- beta.exposure
length(b_exp)
b_out <- beta.outcome
se_exp <- se.exposure
se_out <- se.outcome
loss.function <- "huber"
k <- 1.345
shrinkage <- FALSE
rho <- function(r, ...) mr.raps:::rho.huber(r, k, ...)
overdispersion <- TRUE
res
init.param
num.init <- 10
library(rootSolve)
overdispersion
over.dispersion
over.dispersion <- TRUE
beta
beta.init
init.param
init.param
beta.init
beta
multiroot(psi, init.param)
multiroot(psi, c(0.3, 0))
beta
beta.init
i <- 1
res[[1]]
init.param
multiroot(psi, c(0.3012, 3.2e-4))
multiroot(psi, c(0.3012, 9e-4))
res
beta
install()
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE)
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE)
mr.raps.shrinkage(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE, se.method = "bootstrap")
warnings()
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", shrinkage = FALSE, se.method = "bootstrap")
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", se.method = "bootstrap")
data(lipid.cad)
data <- subset(lipid.cad, lipid == "hdl" & restrict & gwas.selection == "teslovich_2010" & gwas.outcome == "cardiogramplusc4d")
detach(bmi.sbp)
attach(data)
data <- subset(lipid.cad, lipid == "hdl" & restrict & gwas.selection == "teslovich_2010" & gwas.outcome == "cardiogramplusc4d")
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", se.method = "bootstrap")
mean((beta.exposure / se.exposure)^2)
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, T, "huber", se.method = "bootstrap", B = 200)
0.074 / 0.0615
qnorm(0.95)
qnorm(0.975)
1 - pnorm(qnorm(0.975), sd = 1.2)
1 - pnorm(qnorm(0.975, sd = 1.2))
mr.raps.mle(beta.exposure, beta.outcome, se.exposure, se.outcome, F, se.method = "bootstrap", B = 200)
detach(data)
mr.raps(bmi.sbp)
data <- bmi.sbp
out
library(splines)
    out <- mr.raps.shrinkage(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", shrinkage = FALSE)
plot(out)
out
mr.raps.shrinkage.mle(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber")
mr.raps.mle(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber")
mr.raps.mle(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", diagnosis = T)
mr.raps.mle(data$beta.exposure, data$beta.outcome, data$se.exposure, data$se.outcome, TRUE, "huber", diagnostics = T)
document()
library(devtools)
install()
example(mr.raps)
load()
library(mr.raps)
example(mr.raps)
document()
install()
example(mr.raps)
library(mr.raps)
example(mr.raps)
document()
devtools::document()
library(devtools)
document()
install()
library(mr.raps)
example(mr.raps)
example(mr.raps.mle.all)
install("./")
devtools::install("./")
example(mr.raps.mle.all)
library(mr.raps)
example(mr.raps.mle.all)
devtools::document()
ls()
ls()
TxDb.Hsapiens.UCSC.hg38.knownGene
TxDb.Hsapiens.UCSC.hg38.knownGene::TxDb.Hsapiens.UCSC.hg38.knownGene
genes
genes
genes
library(bumphunter)
require(bumphunter)
library(devtools)
document()
document()
install()
install()
library(bmi.sbp)
data(bmi.sbp)
mr.raps.scatterplot(bmi.sbp)
install()
mr.raps.scatterplot(bmi.sbp)
document()
install()
mr.raps.scatterplot(bmi.sbp)
mr.raps.scatterplot(bmi.sbp, annotate = TRUE)
install()
document()
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
document()
install()
example(mr.raps.scatterplot)
example(mr.raps.scatterplot)
library(devtools)
install()
example(mr.raps.scatterplot)
library(mr.raps)
example(mr.raps.scatterplot)
names(bmi.sbp)
data <- bmi.sbp
?mr.raps
fit
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
example(mr.raps.scatterplot)
install()
library(devtools)
isntall()
install()
example(mr.raps.scatterplot)
library(mr.raps)
example(mr.raps.scatterplot)
